#!/bin/ksh
DEBUG=t
# expect - test your expectations
#
# BusFactor1 Inc.
# 2017
# License: AGPL
set +k

tee () {
    echo -n "$1 "
    /usr/bin/tee $2
}

function tri { 
# execute the next word if x is 1
    x=$(<x)
    debug ifa x: $x
    if [[ $x == / ]]; then
	x=$((RANDOM%2))
	$* # run WITH the random
    else
	if [[ $x == 1 ]]; then
	    $*
	fi
    fi
    echo $x | tee ifax x
}

function swch {
# exchange locations
    x=$(<x)
    i=$(<i)
    debug swch x: $x i: $i
    echo $i | tee swchx x
    echo $x | tee swchi i
}

function not {
# not - the one and only
    x=$(<x)
    debug not x: $x
    if [[ $x != / ]]; then
	if [[ $x == 1 ]]; then
	    echo 1
	else
	    echo 0
	fi
    else
	echo $((RANDOM%2))
    fi | tee notx x
    $*
}

# ================================================================================
function debug { [[ $DEBUG = t ]] && echo $*; }

function doit {
    debug doit '$*' $*
    a=$1;shift
    b=$1;shift
    
    $*
    
    x=$(<x)
    i=$(<i)
    
    debug doit x: $x i: $i a: $a b: $b
    
    if [[ $x == $a ]]; then
	if [[ $i == $b ]]; then
	    exit 0
	fi
    else
	exit 1
    fi
}

#onewordprograms () { for i in $ops; do echo $i; done; }
#twowordprograms () { for j in $ops;  do for i in $ops; do echo $i $j; done; done; }
#threewordprograms () { for k in $ops; do for j in $ops;  do for

typeset nx=$1; # save the first argument in Next X (nx)
typeset ni=$2; # save the second argument in Next I (ni)

debug main $nx $ni

doit $*; reset
pass=$?

if [[ $nx == 1/0 ]]; then
    i=$(<i)
    if [[ $i == $ni ]]; then
	echo exit 0
    else
	echo exit 1
    fi
elif [[ $ni == 1/0 ]]; then
    x=$(<x)
    if [[ $x == $nx ]]; then
	echo exit 0;
	
    else
	echo exit 1;
    fi
elif [[ $x == $nx ]]; then
    if [[ $i == $ni ]]; then
	exit 0;
    fi
fi

exit $pass

--
Burton Samograd
2017
